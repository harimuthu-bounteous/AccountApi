name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: account_api_test
        options: >-
          --health-cmd "pg_isready -U myuser" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U myuser; do
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Set up Database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://myuser:mypassword@localhost:5432/account_api_test
        run: |
          bin/rails db:create
          bin/rails db:schema:load
          bin/rails db:migrate

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://myuser:mypassword@localhost:5432/account_api_test
          JWT_SECRET: oHDRpKZLkmqnwlgNvhifyWmMGGeYYRziaX4DIdZlIdjpYKeAJoEkSnnSffHcjXDChR8N0SjCxL8fPc8hlFH5Zf8aWcUwPnokIFyDWUBCzcM5kt6KPOa0ytbj95To6ZUh
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}  # Use the secret key from GitHub Secrets
        run: bundle exec rspec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
